<template>
  <div>
    <tabs onchange="onChangeTabIndex">
      <tab-bar class="tab-bar">
        <text class="tab-text {{currentIndex === 0 ? 'active' : ''}}">妹子</text>
        <text class="tab-text {{currentIndex === 1 ? 'active' : ''}}">Android</text>
        <text class="tab-text {{currentIndex === 2 ? 'active' : ''}}">iOS</text>
        <text class="tab-text {{currentIndex === 3 ? 'active' : ''}}">前端</text>
      </tab-bar>
      <tab-content class="tab-content">
        <list class="list" show="{{currentIndex === 0}}">
          <block for="girlList">
            <list-item type="product">
              <image class="img" src="{{$item.url}}?imageView2/0/w/750"></image>
            </list-item>
          </block>
        </list>
        <list class="list" show="{{currentIndex === 1}}">
          <block for="androidList">
            <list-item type="product">
              <div class="item">
                <text class="title" @click="open($item.url)">{{$item.desc}}</text>
                <text class="who">({{$item.who}})</text>
                <div class="line"></div>
              </div>
            </list-item>
          </block>
        </list>
        <list class="list" show="{{currentIndex === 2}}">
          <block for="iosList">
            <list-item type="product">
              <div class="item">
                <text class="title" @click="open($item.url)">{{$item.desc}}</text>
                <text class="who">({{$item.who}})</text>
                <div class="line"></div>
              </div>
            </list-item>
          </block>
        </list>
        <list class="list" show="{{currentIndex === 3}}">
          <block for="feList">
            <list-item type="product">
              <div class="item">
                <text class="title" @click="open($item.url)">{{$item.desc}}</text>
                <text class="who">({{$item.who}})</text>
                <div class="line"></div>
              </div>
            </list-item>
          </block>
        </list>
      </tab-content>
    </tabs>
  </div>
</template>

<style>
  .tab-bar {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    border-bottom-width: 1px;
    border-bottom-color: #cccccc;
  }

  .tab-text {
    align-items: center;
    justify-content: center;
    width: 250px;
    text-align: center;
    font-size: 32px;
  }

  .active {
    text-align: center;
    color: #3e80cc;
  }

  .img {
    width: 750px;
    height: 750px;
  }

  .list {
    width: 750px;
    flex-grow: 1;
  }

  .title {
    font-size: 36px;
    color: #8bb5da;
    width: 750px;
    height: 100px;
    lines: 1;
    text-overflow: ellipsis;
    margin-right: 20px;
    margin-left: 20px;
  }

  .who {
    font-size: 26px;
    color: #333333;
    width: 750px;
    height: 100px;
    margin-left: 20px;
  }

  .item {
    flex-direction: column;
    width: 700px;
  }

  .line {
    background-color: #eeeeee;
    height: 1px;
    width: 750px;
  }
</style>

<script>
  import router from '@system.router'
  import fetch from '@system.fetch'
  import webview from '@system.webview'

  export default {
    data: {
      girlList: [],
      androidList: [],
      iosList: [],
      feList: [],
      currentIndex: 0,
      pageSize: 10,
      girlPage: 1,
      isRefreshing: false,
    },
    onInit() {
      const self = this
      self.requestGirlData()
      self.requestAndroid()
      self.requestFrondEnd()
      self.requestiOS()
    },
    requestAndroid() {
      const self = this
      fetch.fetch({
        url: `http://gank.io/api/random/data/Android/20`,
        success: (data) => {
          console.log(JSON.stringify(JSON.parse(data.data).results));
          self.androidList = JSON.parse(data.data).results
        },
        fail: (data, code) => {
          console.log("handling fail, code=" + code);
        }
      })
    },
    requestiOS() {
      const self = this
      fetch.fetch({
        url: `http://gank.io/api/random/data/iOS/20`,
        success: (data) => {
          console.log(JSON.stringify(JSON.parse(data.data).results));
          self.iosList = JSON.parse(data.data).results
        },
        fail: (data, code) => {
          console.log("handling fail, code=" + code);
        }
      })
    },
    requestFrondEnd() {
      const self = this
      fetch.fetch({
        url: `http://gank.io/api/random/data/%E5%89%8D%E7%AB%AF/20`,
        success: (data) => {
          console.log(JSON.stringify(JSON.parse(data.data).results));
          self.feList = JSON.parse(data.data).results
        },
        fail: (data, code) => {
          console.log("handling fail, code=" + code);
        }
      })
    },
    requestGirlData() {
      const self = this
      fetch.fetch({
        url: `http://gank.io/api/random/data/%E7%A6%8F%E5%88%A9/20`,
        success: (data) => {
          console.log(JSON.stringify(JSON.parse(data.data).results));
          self.girlList = JSON.parse(data.data).results
          self.isRefreshing = false
        },
        fail: (data, code) => {
          console.log("handling fail, code=" + code);
        }
      })
    },
    onChangeTabIndex(evt) {
      console.log(evt.index)
      this.currentIndex = evt.index
    },
    refreshGirlList() {
      const self = this
      self.isRefreshing = e.refreshing
      self.requestGirlData()
    },
    open(url) {
      webview.loadUrl({
        url: url
      })
    }
  }
</script>